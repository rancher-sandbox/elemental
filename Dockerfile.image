# ARGS go first if used on FROM
ARG OPERATOR_IMAGE=quay.io/costoolkit/elemental-operator:latest
ARG SYSTEM_AGENT_IMAGE=rancher/system-agent:v0.2.9
# Binaries and files needed from elemental-toolkit repository
ARG LUET_VERSION=0.32.5
FROM quay.io/luet/base:$LUET_VERSION AS framework-build
COPY framework/files/etc/luet/luet.yaml /etc/luet/luet.yaml
ENV LUET_NOLOCK=true
SHELL ["/usr/bin/luet", "install", "-y", "--system-target", "/framework"]

RUN utils/k9s
RUN utils/nerdctl
RUN toolchain/elemental-cli
RUN toolchain/cosign
RUN selinux/rancher


# elemental-operator
FROM $OPERATOR_IMAGE as elemental-operator

# rancher-system-agent
FROM $SYSTEM_AGENT_IMAGE as system-agent


# Base os
FROM registry.suse.com/suse/sle-micro-rancher/5.2:latest as default

# Copy installed files from the luet repos
COPY --from=framework-build /framework /
# Copy elemental-operator
COPY --from=elemental-operator /usr/sbin/elemental-operator /usr/sbin/elemental-operator
# Copy rancher-system-agent as elemental-system-agent to avoid clashes
COPY --from=system-agent /usr/bin/rancher-system-agent /usr/sbin/elemental-system-agent

# Copy local framework files
COPY framework/cos/ /
COPY framework/files/ /

ARG IMAGE_TAG=latest
ARG IMAGE_COMMIT=""
RUN echo NAME="Elemental" > /etc/os-release
RUN echo ID="elemental" >> /etc/os-release
RUN echo ID_LIKE="suse opensuse" >> /etc/os-release
RUN echo BUG_REPORT_URL="https://github.com/rancher/elemental/issues" >> /etc/os-release
RUN echo HOME_URL="https://github.com/rancher/elemental" >> /etc/os-release
RUN echo "VERSION=${IMAGE_TAG}" >> /etc/os-release
RUN echo "VERSION_ID=$(echo ${IMAGE_TAG} | sed s/^v//)" >> /etc/os-release
RUN echo "PRETTY_NAME=Elemental ${IMAGE_TAG}" >> /etc/os-release
RUN echo "COMMIT=${IMAGE_COMMIT}" >> /etc/os-release

# IMPORTANT: Setup os-release used for versioning/upgrade. The
# values here should reflect the tag of the image being built
ARG IMAGE_REPO=norepo
RUN echo "IMAGE_REPO=${IMAGE_REPO}"         >> /etc/os-release
RUN echo "IMAGE_TAG=${IMAGE_TAG}"           >> /etc/os-release
RUN echo "IMAGE=${IMAGE_REPO}:${IMAGE_TAG}" >> /etc/os-release

# Rebuild initrd to setup dracut with the boot configurations
RUN mkinitrd && \
    # aarch64 has an uncompressed kernel so we need to link it to vmlinuz
    kernel=$(ls /boot/Image-* | head -n1) && \
    if [ -e "$kernel" ]; then ln -sf "${kernel#/boot/}" /boot/vmlinuz; fi

# Save some space
RUN rm -rf /var/log/update* && \
    >/var/log/lastlog && \
    rm -rf /boot/vmlinux*