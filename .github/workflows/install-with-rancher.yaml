name: Install ROS on a server through Rancher

on:
  workflow_dispatch:
    inputs:
      registry:
        required: false
        default: registry.hub.docker.com
        type: string
        description: Registry to use
      org:
        required: false
        #default: costoolkit
        default: ldevulder
        type: string
        description: Organization to use

jobs:
  build:
    env:
      DOCKER_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
      DOCKER_REGISTRY: ${{ github.event.inputs.registry }}
      REPO: ${{ github.event.inputs.registry }}/${{ github.event.inputs.org }}/os2-ci
      REPO_ROS_OPERATOR: ${{ github.event.inputs.registry }}/${{ github.event.inputs.org }}/ros-operator-ci
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Make images (container/iso/qcow2/etc.)
        run: make ci
      - name: Upload results
        uses: actions/upload-artifact@v2
        with:
          name: artifacts
          path: dist
          if-no-files-found: error
      - name: Release space from worker â™»
        if: always()
        run: |
          sudo rm -rf build bin dist
          docker system prune -f -a --volumes
  install-with-rancher:
    runs-on: self-hosted
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: '^1.17'
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: artifacts
      - name: Cleanup artifacts
        run: |
          ls -liah
          ls -liah artifacts
          mv artifacts/*.iso ros.iso
          mv artifacts/*.tgz ros-operator.tgz
          rm -rf artifacts
      - name: Run tests
        run: |
          # Configure default network
          sudo systemctl start libvirtd
          grep -q '^allow all$' /etc/qemu/bridge.conf || echo 'allow all' | sudo tee -a /etc/qemu/bridge.conf
          sudo virsh net-start default
          sudo virsh net-dumpxml default | grep -q '\<ros-node\>' || sudo virsh net-update default add ip-dhcp-host "<host mac='52:54:00:00:00:01' name='ros-node' ip='192.168.122.10' />" --live --config
          # Create VM
          sudo virt-install \
            --name ros-node \
            --os-type=Linux \
            --os-variant=opensuse-unknown \
            --hvm \
            --ram=2048 \
            --vcpus=2 \
            --disk path=ros-node.img,bus=virtio,size=35 \
            --graphics none \
            --rng random \
            --serial pty \
            --autoconsole none \
            --cdrom ros.iso \
            --network bridge=virbr0,mac=52:54:00:00:00:01
          # !! DEBUG !!
          sudo virsh list
      - name: Upload logs
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: ros-vbox.logs.zip
          path: tests/**/logs/*
          if-no-files-found: warn
      - name: Cleanup runner
        if: always()
        run: |
          # Delete VM
          sudo virsh destroy ros-node
          sudo virsh undefine ros-node
          # Remove default network config
          sudo virsh net-dumpxml default | grep -q '\<ros-node\>' && sudo virsh net-update default delete ip-dhcp-host "<host mac='52:54:00:00:00:01' name='ros-node' ip='192.168.122.10' />" --live --config
          sudo virsh net-destroy default
          sudo virsh net-autostart --disable default
          grep -q '^allow all$' /etc/qemu/bridge.conf && sudo sed -i '/^allow all$/d' /etc/qemu/bridge.conf
          sudo systemctl disable --now libvirtd
          # Delete files
          rm -f ros.iso ros-node.*
