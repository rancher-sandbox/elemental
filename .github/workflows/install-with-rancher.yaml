name: Install ROS on a server through Rancher

on:
  workflow_dispatch:
    inputs:
      registry:
        required: false
        default: registry.hub.docker.com
        type: string
        description: Registry to use
      org:
        required: false
        #default: costoolkit
        default: ldevulder
        type: string
        description: Organization to use

jobs:
# build:
#   runs-on: ubuntu-latest
#   env:
#     DOCKER_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
#     DOCKER_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
#     DOCKER_REGISTRY: ${{ github.event.inputs.registry }}
#     REPO: ${{ github.event.inputs.registry }}/${{ github.event.inputs.org }}/os2-ci
#     REPO_ROS_OPERATOR: ${{ github.event.inputs.registry }}/${{ github.event.inputs.org }}/ros-operator-ci
#   steps:
#     - name: Checkout
#       uses: actions/checkout@v2
#     - name: Set up Docker Buildx
#       id: buildx
#       uses: docker/setup-buildx-action@v1
#     - name: Make images (container/iso/qcow2/etc.)
#       run: make ci
#     - name: Upload results
#       uses: actions/upload-artifact@v3
#       with:
#         name: artifacts
#         path: dist
#         if-no-files-found: error
#     - name: Release space from worker â™»
#       if: always()
#       run: |
#         sudo rm -rf build bin dist
#         docker system prune -f -a --volumes
  install-with-rancher:
    runs-on: self-hosted
#   needs: build
    env:
      CLUSTER_NAME: cluster-k3s
      CLUSTER_NS: fleet-default
      K3S_VERSION: v1.21.9+k3s1
      KUBECONFIG: /etc/rancher/k3s/k3s.yaml
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: '^1.17'
#     - name: Download artifacts
#       uses: actions/download-artifact@v3
#       with:
#         name: artifacts
      # !! DEBUG !!
      - name: Download artifacts
        run: |
          mkdir -p artifacts
          cp -ax ../../artifacts/. artifacts/.
      # !! DEBUG !!
      - name: Install Rancher
        run: scripts/install-rancher
      - name: Configure Rancher to provision RancherOS on a test server
        run: scripts/configure-rancher-step-01
      - name: Install RancherOS on the test server
        run: script -e -c scripts/install-ros-node
      - name: Configure Rancher to add the test server in a test cluster
        run: scripts/configure-rancher-step-02
      - name: Add the test server in the test cluster
        run: scripts/add-node-in-cluster
      - name: Upload logs
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: ros-vbox.logs.zip
          path: tests/**/logs/*
          if-no-files-found: warn
      - name: Cleanup runner
        if: always()
        run: |
          ## Stop HTTP server
          #HTTPD_PID=$(ps -efww | awk '/[h]ttp\.server/ { print $2 }')
          #[[ -n "${HTTPD_PID}" ]] && kill ${HTTPD_PID}
          ## Delete VM
          #sudo virsh destroy ros-node || true
          #sudo virsh undefine ros-node || true
          # Remove default network config
          #sudo virsh net-destroy default || true
          #sudo virsh net-undefine default || true
          #if grep -q '^allow all$' /etc/qemu/bridge.conf; then sudo sed -i '/^allow all$/d' /etc/qemu/bridge.conf || true; fi
          #sudo systemctl disable --now libvirtd || true
          ## Uninstall K3s
          #/usr/local/bin/k3s-uninstall.sh || true
          ## Remove Helm repos
          #helm repo remove rancher-stable jetstack || true
          ## Delete files
          # rm -rf artifacts ros-node.*
