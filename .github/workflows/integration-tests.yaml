name: Integration tests
on:
  push:
concurrency:
  group: integration-tests=full-${{ github.head_ref || github.ref }}-${{ github.repository }}
  cancel-in-progress: true

env:
   DOCKER_USERNAME: ${{ secrets.QUAY_USERNAME }}
   DOCKER_PASSWORD: ${{ secrets.QUAY_PASSWORD }}
   DOCKER_REGISTRY: quay.io
   REPO: quay.io/costoolkit/os2-ci
   REPO_ROS_OPERATOR: quay.io/costoolkit/ros-operator-ci

jobs:
  build:

    runs-on: ubuntu-latest
    #runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
      -
        name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - run: |
              make ci
      - name: Upload results
        uses: actions/upload-artifact@v2
        with:
          name: artifacts
          path: dist
          if-no-files-found: error
      - uses: actions/upload-artifact@v2
        with:
          name: iso
          path: dist/artifacts/*.iso
          if-no-files-found: warn
      - uses: actions/upload-artifact@v2
        with:
          name: qcow
          path: dist/artifacts/*.qcow.gz
          if-no-files-found: warn
      - uses: actions/upload-artifact@v2
        with:
          name: box
          path: dist/artifacts/*.box
          if-no-files-found: warn
      - uses: actions/upload-artifact@v2
        with:
          name: chart
          path: dist/artifacts/*.tgz
          if-no-files-found: warn
      - name: Release space from worker ♻
        if: always()
        run: |
          sudo rm -rf build || true
          sudo rm -rf bin || true
          sudo rm -rf dist || true
          docker system prune -f -a --volumes || true
  tests-installer:
    runs-on: macos-10.15
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Install Go
        uses: actions/setup-go@v2
        with:
            go-version: '^1.17'
      - name: Install deps
        run: |
          brew install cdrtools jq
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: artifacts
      - run: |
              ls -liah
              ls -liah artifacts
              mv artifacts/*.iso ros.iso
              mv artifacts/*.tgz ros-operator.tgz
              rm -rf artifacts
      - name: OS version
        id: version
        run: |
          source scripts/version
          # Set output parameters.
          echo ::set-output name=tag::${TAG}
      - name: Run tests
        env:
          BOX_URL: ${{ github.event.inputs.box-image }}
        run: |
          export COS_HOST=127.0.0.1:2222
          export ROS_CHART=$PWD/ros-operator.tgz
          export ISO=$PWD/ros.iso
          export CONTAINER_IMAGE=$REPO:${{ steps.version.outputs.tag }}
          make deps
          cd tests && make installer-tests
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: ros-vbox.logs.zip
          path: tests/**/logs/*
          if-no-files-found: warn
  tests-vbox:
    runs-on: macos-10.15
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Install Go
        uses: actions/setup-go@v2
        with:
            go-version: '^1.17'
      - name: Install deps
        run: |
          brew install cdrtools jq
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: artifacts
      - run: |
              ls -liah
              ls -liah artifacts
              mv artifacts/*.iso ros.iso
              mv artifacts/*.tgz ros-operator.tgz
              rm -rf artifacts
      - name: Run tests
        env:
          BOX_URL: ${{ github.event.inputs.box-image }}
        run: |
          export COS_HOST=127.0.0.1:2222
          export ROS_CHART=$PWD/ros-operator.tgz
          export ISO=$PWD/ros.iso
          make deps
          cd tests && make vbox-tests
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: ros-vbox.logs.zip
          path: tests/**/logs/*
          if-no-files-found: warn
  tests:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Install Go
        uses: actions/setup-go@v2
        with:
            go-version: '^1.16'
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: artifacts
      - run: |
              ls -liah
              ls -liah artifacts
              mv artifacts/*.box ros.box
      - name: Install deps
        run: |
          sudo apt-get update
          sudo apt-get remove -y apparmor*
          sudo apt-get install -y qemu-system-x86 make libvirt-daemon-system bridge-utils ovmf curl
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
          sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
          sudo apt-get update && sudo apt-get install vagrant
          sudo apt-get install -y qemu libvirt-daemon-system libvirt-clients ebtables dnsmasq-base
          sudo apt-get install -y libxslt-dev libxml2-dev libvirt-dev zlib1g-dev ruby-dev
          sudo apt-get install -y libguestfs-tools gcc
          vagrant plugin install vagrant-libvirt
      - name: Prepare libvirt
        run: |
          # Create bridge conf
          sudo mkdir -p /etc/qemu/
          echo "allow all" | sudo tee -a /etc/qemu/bridge.conf
          sudo chmod u+r /etc/qemu/bridge.conf
          sudo chmod u+s $(find /usr/ -name qemu-bridge-helper -print -quit|xargs)

          # sudo /usr/sbin/libvirtd &
          # sleep 5
          # Set a static ip for our VM
          sudo virsh net-update default add ip-dhcp-host "<host mac='52:54:00:00:00:01' name='jojo' ip='192.168.122.50' />" --live --config || true
      - name: Run tests
        run: |
          export BOX=$PWD/ros.box
          make integration-tests
      - name: Release space from worker ♻
        if: always()
        run: |
          sudo rm -rf build || true
          sudo rm -rf bin || true
          sudo rm -rf dist || true
          cd tests && make clean || true
          docker system prune -f -a --volumes || true
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: ros-libvirt.logs.zip
          path: tests/**/logs/*
          if-no-files-found: warn