name: "Elemental Rootfs Layout Settings"
stages:
  initramfs:
    - if: '[ ! -f /run/cos/recovery_mode ]'
      commands:
      - |
        if [ ! -e /usr/local/etc/hostname ]; then
          echo rancher-${RANDOM} > /usr/local/etc/hostname
        fi
        ln -sf /usr/local/etc/hostname /etc/hostname
    - if: '[ ! -f "/run/cos/recovery_mode" ]'
      name: "Persist /etc/machine-id"
      commands:
      - |
        # persist machine-id
        if [ -s /usr/local/etc/machine-id ]; then
          cat /usr/local/etc/machine-id > /etc/machine-id
        else
          mkdir -p /usr/local/etc
          cp /etc/machine-id /usr/local/etc
        fi
    - name: "Create essential persistent paths"
      directories:
      - path: /usr/local/bin
  rootfs:
    - if: '[ ! -f "/run/cos/recovery_mode" ]'
      name: "Layout configuration"
      environment_file: /run/cos/cos-layout.env
      environment:
        VOLUMES: "LABEL=COS_OEM:/oem LABEL=COS_PERSISTENT:/usr/local"
        OVERLAY: "tmpfs:25%"
        RW_PATHS: "/var /etc /srv"
        PERSISTENT_STATE_PATHS: >-
          /etc/systemd
          /etc/rancher
          /etc/ssh
          /etc/iscsi 
          /etc/cni
          /home
          /opt
          /root
          /usr/libexec
          /var/log
          /var/lib/elemental
          /var/lib/rancher
          /var/lib/kubelet
          /var/lib/wicked
          /var/lib/longhorn
          /var/lib/cni
        PERSISTENT_STATE_BIND: "true"
    - if: '[ -f "/run/cos/recovery_mode" ]'
      # omit the persistent partition on recovery mode
      name: "Layout configuration"
      environment_file: /run/cos/cos-layout.env
      environment:
        VOLUMES: "LABEL=COS_OEM:/oem"
        OVERLAY: "tmpfs:25%"
  rootfs.after:
    - if: '[ ! -f /run/cos/recovery_mode ] && [ ! -f /run/cos/live_mode ]'
      name: "Grow persistent"
      layout:
        device:
          label: COS_PERSISTENT
        expand_partition:
          size: 0
  # XXX:
  # Fetch datasources ONLY when network is present
  # This prevents network configuration via cloud-init from datasources.
  # See: https://github.com/rancher-sandbox/cOS-toolkit/issues/1140
  network:
    - if: '[ ! -f /oem/userdata ]'
      name: "Pull data from provider"
      datasource:
        providers: ["cdrom", "gcp", "openstack", "aws", "azure", "hetzner", "packet", "scaleway", "vultr", "digitalocean", "metaldata" ]
        path: "/oem"
      files:
      - path: /oem/userdata_load
    - if: '[ -f /oem/userdata ] && [ -f /oem/userdata_load ]'
      commands:
      - elemental cloud-init -s initramfs /oem/userdata
      - elemental cloud-init -s boot /oem/userdata
      - rm -rf /oem/userdata_load
    - if: '[ -f oem/userdata_load ]'
      name: Clear any userdata leftovers
      commands:
      - rm -rf /oem/userdata_load