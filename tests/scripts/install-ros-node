#!/bin/bash

set -e -x

# Start a simple HTTP server for iPXE/OS installation
pushd ..
setsid --fork python3 -m http.server >/dev/null 2>&1
IPXE_SCRIPT=$(ls *.ipxe 2>/dev/null)
popd

# Fix iPXE boot script for CI
sed -i \
  -e "/^set url/s@.*@set url http://192.168.122.1:8000@" \
  -e '/set config /s@.*@set config ${url}/install-config.yaml@' \
  ../${IPXE_SCRIPT}

# Start libvirtd
# Systemd cannot be used in a container
libvirtd --daemon
virtlogd --daemon

# Configure default network
grep -q '^allow all$' /etc/qemu/bridge.conf || echo 'allow all' | tee -a /etc/qemu/bridge.conf
cat > net-default.xml <<EOF
<network>
  <name>default</name>
  <forward mode='nat'>
    <nat>
      <port start='1024' end='65535'/>
    </nat>
  </forward>
  <bridge name='virbr0' stp='on' delay='0'/>
  <ip address='192.168.122.1' netmask='255.255.255.0'>
    <dhcp>
      <range start='192.168.122.2' end='192.168.122.254'/>
      <host mac='52:54:00:00:00:01' name='ros-node' ip='192.168.122.10'/>
      <bootp file='http://192.168.122.1:8000/${IPXE_SCRIPT}'/>
    </dhcp>
  </ip>
</network>
EOF
virsh net-undefine default
virsh net-create net-default.xml

# Create VM
virt-install \
  --name ros-node \
  --os-type Linux \
  --os-variant opensuse-unknown \
  --virt-type kvm \
  --machine q35 \
  --boot bios.useserial=on \
  --ram=2048 \
  --vcpus=2 \
  --cpu host \
  --disk path=ros-node.img,bus=virtio,size=35 \
  --check disk_size=off \
  --graphics none \
  --serial pty \
  --console pty,target_type=virtio \
  --rng random \
  --tpm emulator,model=tpm-crb,version=2.0 \
  --noreboot \
  --pxe \
  --network network=default,bridge=virbr0,model=virtio,mac=52:54:00:00:00:01
